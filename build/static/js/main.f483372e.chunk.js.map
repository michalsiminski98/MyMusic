{"version":3,"sources":["assets/styles/GlobalStyle.js","components/atoms/SubmitButton/SubmitButton.styles.js","components/atoms/SubmitButton/SubmitButton.js","components/molecules/FormField/FormField.styles.js","components/molecules/FormField/FormField.js","components/molecules/PhotoField/PhotoField.styles.js","components/molecules/PhotoField/PhotoField.js","components/organisms/Form/Form.styles.js","components/organisms/Form/Form.js","components/templates/MainTemplate.styles.js","components/templates/MainTemplate.js","views/Root.js","index.js"],"names":["GlobalStyle","createGlobalStyle","StyledButton","styled","button","SubmitButton","Wrapper","div","Label","label","Input","input","FormField","labelText","id","name","value","inputype","type","onChange","htmlFor","selected","form","defaultValue","disabled","hidden","PhotoWrapper","img","PhotoField","accept","src","Title","h3","initialState","firstName","lastName","peselNip","Form","useState","formValues","setFormValues","validationFlag","setValidationFlag","peselInfoFlag","setPeselInfoFlag","handleInputChange","e","target","useEffect","length","Number","isInteger","country","split","slice","flag","i","toLowerCase","includes","onSubmit","preventDefault","requestOptions","method","headers","body","JSON","stringify","title","fetch","then","response","json","catch","console","log","style","color","fontSize","reader","FileReader","onload","readyState","result","readAsDataURL","files","MainTemplate","children","Root","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f483372e.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  *{\r\n    margin: 0;\r\n    padding:0;\r\n    font-family: 'Open Sans', sans-serif;\r\n  }\r\n  html{\r\n    box-sizing: border-box;\r\n  }\r\n  *, *::after, *::before{\r\n    box-sizing: inherit;\r\n  }\r\n  /* ******* */\r\n  /* Hidden ARROWS IN INPUT */\r\n  /* Chrome, Safari, Edge, Opera */\r\ninput::-webkit-outer-spin-button,\r\ninput::-webkit-inner-spin-button {\r\n  -webkit-appearance: none;\r\n  margin: 0;\r\n}\r\n/* Firefox */\r\ninput[type=number] {\r\n  -moz-appearance: textfield;\r\n}\r\n/* ******* */\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledButton = styled.button`\r\n  width: 130px;\r\n  height: 30px;\r\n  margin-top: 40px;\r\n  border: 1px solid black;\r\n  border-radius: 10px;\r\n  background: transparent;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background: rgb(190, 190, 190);\r\n    border: rgb(190, 190, 190);\r\n  }\r\n`;\r\n","import { StyledButton } from \"./SubmitButton.styles\";\r\n\r\nconst SubmitButton = () => {\r\n  return <StyledButton>Submit</StyledButton>;\r\n};\r\n\r\nexport default SubmitButton;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-bottom: 8px;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  margin-bottom: 8px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  border: 1px solid black;\r\n  border-radius: 5px;\r\n  font-size: 16px;\r\n  padding: 4px 8px;\r\n`;\r\n","import { Input, Label, Wrapper } from \"./FormField.styles\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst FormField = ({\r\n  labelText,\r\n  id,\r\n  name,\r\n  value,\r\n  inputype = \"input\",\r\n  type = \"text\",\r\n  onChange,\r\n}) => {\r\n  return (\r\n    <Wrapper>\r\n      <Label htmlFor={id}>{labelText}</Label>\r\n      {inputype === \"select\" ? (\r\n        <>\r\n          <select\r\n            id={id}\r\n            name={name}\r\n            value={value}\r\n            onChange={onChange}\r\n            selected=\"person\"\r\n            form=\"carform\"\r\n          >\r\n            <option value=\"\" defaultValue disabled hidden></option>\r\n            <option value=\"person\">Person</option>\r\n            <option value=\"business\">Business</option>\r\n          </select>\r\n        </>\r\n      ) : (\r\n        <Input\r\n          id={id}\r\n          name={name}\r\n          type={type}\r\n          value={value}\r\n          onChange={onChange}\r\n        />\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nFormField.propTypes = {\r\n  labelText: PropTypes.string,\r\n  id: PropTypes.string,\r\n  name: PropTypes.string,\r\n  value: PropTypes.string,\r\n  inputype: PropTypes.string,\r\n  type: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport default FormField;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Input = styled.input``;\r\n\r\nexport const PhotoWrapper = styled.img`\r\n  width: 150px;\r\n  height: 150px;\r\n  margin: 8px;\r\n  border: 1px solid black;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  width: 130px;\r\n  height: 30px;\r\n  margin: 8px;\r\n  font-size: 14px;\r\n  border: 1px solid black;\r\n  border-radius: 10px;\r\n  background: transparent;\r\n  cursor: pointer;\r\n  text-align: center;\r\n  line-height: 30px;\r\n`;\r\n","import { Input, Label, PhotoWrapper } from \"./PhotoField.styles\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst PhotoField = ({ id, name, type, accept, onChange, img }) => {\r\n  return (\r\n    <>\r\n      <PhotoWrapper src={img} />\r\n      <Input\r\n        type={type}\r\n        accept={accept}\r\n        name={name}\r\n        id={id}\r\n        onChange={onChange}\r\n        hidden\r\n      />\r\n      <Label htmlFor={id}>Choose photo</Label>\r\n    </>\r\n  );\r\n};\r\n\r\nPhotoField.propTypes = {\r\n  id: PropTypes.string,\r\n  name: PropTypes.string,\r\n  type: PropTypes.string,\r\n  accept: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  img: PropTypes.string,\r\n};\r\n\r\nexport default PhotoField;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.form`\r\n  min-width: 40%;\r\n  max-width: 600px;\r\n  min-height: 400px;\r\n  margin: 0 0 0 50%;\r\n  padding: 16px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  transform: translate(-50%, 80px);\r\n  background: rgb(250, 250, 250);\r\n  border: 1px solid rgb(205, 205, 205);\r\n  border-radius: 20px;\r\n  -webkit-box-shadow: 5px 8px 15px 1px rgba(0, 0, 0, 0.34);\r\n  box-shadow: 5px 8px 15px 1px rgba(0, 0, 0, 0.34);\r\n`;\r\n\r\nexport const Title = styled.h3`\r\n  font-size: 24px;\r\n  letter-spacing: 1px;\r\n  margin: 16px;\r\n`;\r\n","import { useEffect, useState } from \"react\";\r\nimport SubmitButton from \"../../atoms/SubmitButton/SubmitButton\";\r\nimport FormField from \"../../molecules/FormField/FormField\";\r\nimport PhotoField from \"../../molecules/PhotoField/PhotoField\";\r\nimport { Title, Wrapper } from \"./Form.styles\";\r\n\r\nconst initialState = {\r\n  firstName: \"\",\r\n  lastName: \"\",\r\n  type: \"\",\r\n  peselNip: \"\",\r\n  img: \"\",\r\n};\r\n\r\nconst Form = () => {\r\n  const [formValues, setFormValues] = useState(initialState);\r\n  // if validation flag = true, form is ok\r\n  const [validationFlag, setValidationFlag] = useState(false);\r\n  const [peselInfoFlag, setPeselInfoFlag] = useState(false);\r\n\r\n  const handleInputChange = (e) => {\r\n    setFormValues({ ...formValues, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleImage = (e) => {\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      if (reader.readyState === 2) {\r\n        setFormValues({ ...formValues, img: reader.result });\r\n      }\r\n    };\r\n    reader.readAsDataURL(e.target.files[0]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (formValues.type === \"person\") {\r\n      if (\r\n        formValues.peselNip.length === 11 &&\r\n        Number.isInteger(Number(formValues.peselNip))\r\n      ) {\r\n        setValidationFlag(true);\r\n      } else setValidationFlag(false);\r\n    } else if (formValues.type === \"business\") {\r\n      let country = formValues.peselNip.split(\"\").slice(0, 2);\r\n      let flag = true;\r\n      for (let i = 0; i < country.length; i++) {\r\n        country[i] = country[i].toLowerCase();\r\n        if (\r\n          ![\r\n            \"a\",\r\n            \"b\",\r\n            \"c\",\r\n            \"d\",\r\n            \"e\",\r\n            \"f\",\r\n            \"g\",\r\n            \"h\",\r\n            \"i\",\r\n            \"j\",\r\n            \"k\",\r\n            \"l\",\r\n            \"m\",\r\n            \"n\",\r\n            \"o\",\r\n            \"p\",\r\n            \"q\",\r\n            \"r\",\r\n            \"s\",\r\n            \"t\",\r\n            \"u\",\r\n            \"v\",\r\n            \"w\",\r\n            \"x\",\r\n            \"y\",\r\n            \"z\",\r\n          ].includes(country[i])\r\n        ) {\r\n          flag = false;\r\n        }\r\n      }\r\n      if (flag === true && formValues.peselNip.length === 12)\r\n        setValidationFlag(true);\r\n      else setValidationFlag(false);\r\n    }\r\n  }, [formValues, validationFlag]);\r\n\r\n  const handleSubmitContractor = (e) => {\r\n    e.preventDefault();\r\n    if (validationFlag) {\r\n      const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ title: \"React Hooks POST Request Example\" }),\r\n      };\r\n      fetch(\"https://localhost:60001/Contractor/Save\", requestOptions)\r\n        .then((response) => response.json())\r\n        .catch(console.log(\"Nie znaleziono metody zapisu\"));\r\n      setFormValues(initialState);\r\n      setPeselInfoFlag(false);\r\n      setValidationFlag(false);\r\n    } else {\r\n      setPeselInfoFlag(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Wrapper onSubmit={handleSubmitContractor}>\r\n      <Title>Add contractor</Title>\r\n      <FormField\r\n        labelText=\"First name\"\r\n        id=\"firstName\"\r\n        name=\"firstName\"\r\n        value={formValues.firstName}\r\n        onChange={handleInputChange}\r\n      />\r\n      <FormField\r\n        labelText=\"Last name\"\r\n        id=\"lastName\"\r\n        name=\"lastName\"\r\n        value={formValues.lastName}\r\n        onChange={handleInputChange}\r\n      />\r\n      <FormField\r\n        labelText=\"Type\"\r\n        id=\"type\"\r\n        name=\"type\"\r\n        inputype=\"select\"\r\n        value={formValues.type}\r\n        onChange={handleInputChange}\r\n      />\r\n      <FormField\r\n        labelText=\"PESEL/NIP\"\r\n        id=\"peselNip\"\r\n        name=\"peselNip\"\r\n        value={formValues.peselNip}\r\n        onChange={handleInputChange}\r\n      />\r\n      {peselInfoFlag && (\r\n        <p style={{ color: \"red\", fontSize: 12 }}>Incorrect PESEL/NIP</p>\r\n      )}\r\n      <PhotoField\r\n        id=\"imageUpload\"\r\n        name=\"imageUpload\"\r\n        type=\"file\"\r\n        accept=\"image/jpg,image/jpeg\"\r\n        onChange={handleImage}\r\n        img={formValues.img}\r\n      />\r\n      <SubmitButton type=\"submit\" />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background: rgb(245, 245, 245);\r\n`;\r\n","import { Wrapper } from \"./MainTemplate.styles\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst MainTemplate = ({ children }) => {\r\n  return <Wrapper>{children}</Wrapper>;\r\n};\r\n\r\nMainTemplate.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n};\r\n\r\nexport default MainTemplate;\r\n","import { GlobalStyle } from \"../assets/styles/GlobalStyle\";\nimport Form from \"../components/organisms/Form/Form\";\nimport MainTemplate from \"../components/templates/MainTemplate\";\n\nfunction Root() {\n  return (\n    <>\n      <GlobalStyle />\n      <MainTemplate>\n        <Form />\n      </MainTemplate>\n    </>\n  );\n}\n\nexport default Root;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Root from \"./views/Root\";\nimport \"./assets/styles/font.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Root />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}